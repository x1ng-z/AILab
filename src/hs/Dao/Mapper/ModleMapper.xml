<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hs.Dao.ModleMapper">
    <resultMap id="modleResult" type="hs.Bean.ControlModle">
        <id property="modleId" column="modleId"/>
        <result property="modleName" column="modleName"/>
        <result property="predicttime_P" column="predicttime_P"/>
        <result property="controlAPCOutCycle" column="controlAPCOutCycle"/>
        <result property="timeserise_N" column="timeserise_N"/>
        <result property="controltime_M" column="controltime_M"/>
        <result property="modleEnable" column="modleEnable"/>

        <collection property="modlePins" column="modleId" ofType="hs.Bean.ModlePin" select="findModlePins"/>

        <collection property="responTimeSerises" column="modleId" ofType="hs.Bean.ResponTimeSerise"
                    select="findModleRespon"/>

        <!--<collection property="unhandleTag" ofType="hs.Bean.ModleTag">-->
        <!--<id property="modletagId" column="modletagId"/>-->
        <!--<result property="modleId" column="refrencemodleId"/>-->
        <!--<result property="iotype" column="iotype"/>-->
        <!--<result property="limitHigh" column="limitHigh"/>-->
        <!--<result property="limitLow" column="limitLow"/>-->
        <!--<result property="limitHighRes" column="limitHighRes"/>-->
        <!--<result property="limitLowRes" column="limitLowRes"/>-->
        <!--<result property="stepRespJson" column="stepRespJson"/>-->
        <!--<result property="Q" column="Q"/>-->
        <!--<result property="R" column="R"/>-->
        <!--<association property="tagclazz" javaType="hs.Bean.ModlePin column="{id=refrencetagId,modleId=refrencemodleId}" select="findModlePins"/>-->
        <!--<association property="pvTag" javaType="hs.Bean.ModlePin column="{id=PVTagrefrenceId,modleId=refrencemodleId}" select="findModlePins"/>-->
        <!--<association property="backValueTag" javaType="hs.Bean.ModlePin column="{id=backValue,modleId=refrencemodleId}" select="findModlePins"/>-->
        <!--<discriminator javaType="string" column="iotype">-->
        <!--<case value="mv" resultType="hs.Bean.MVModleTag"/>-->
        <!--<case value="ff" resultType="hs.Bean.FFModleTag"/>-->
        <!--<case value="sp" resultType="hs.Bean.SPModleTag"/>-->
        <!--<case value="pv" resultType="hs.Bean.PVModleTag"/>-->
        <!--</discriminator>-->
        <!--</collection>-->
    </resultMap>




    <resultMap id="pinResult" type="hs.Bean.ModlePin">
        <id property="modlepinsId" column="modlepinsId"/>
        <result property="reference_modleId" column="reference_modleId"/>
        <result property="modleOpcTag" column="modleOpcTag"/>
        <result property="modlePinName" column="modlePinName"/>
        <result property="opcTagName" column="opcTagName"/>
        <result property="resource" column="resource"/>
        <result property="Q" column="Q"/>
        <result property="dmvHigh" column="dmvHigh"/>
        <result property="deadZone" column="deadZone"/>
        <result property="funelinitValue" column="funelinitValue"/>
        <result property="R" column="R"/>
        <result property="dmvLow" column="dmvLow"/>
        <result property="referTrajectoryCoef" column="referTrajectoryCoef"/>
        <association property="filter" javaType="hs.Filter.Filter" column="modlepinsId" select="findfilterByid"/>
    </resultMap>
    
    <resultMap id="filterResult" type="hs.Filter.Filter">
        <id property="pk_filterid" column="pk_filterid"/>
        <result property="pk_pinid" column="pk_pinid"/>
        <result property="backToDCSTag" column="backToDCSTag"/>
        <result property="filtername" column="filtername"/>
        <discriminator javaType="string" column="filtername">
            <case value="mvav" resultType="hs.Filter.MoveAverageFilter">
                <result property="capacity" column="filter_time"/>
            </case>
            <case value="fodl" resultType="hs.Filter.FirstOrderLagFilter">
                <result property="filter_alphe" column="filter_alphe"/>
            </case>
        </discriminator>
    </resultMap>


    <select id="getModles" resultMap="modleResult">
      select * from modle
    </select>

    <select id="getModle" resultMap="modleResult">
        select * from modle where modleId=#{modleid}
    </select>


    <select id="findTagById" resultType="hs.Bean.Tag">
        select * from tag where tagId=#{id}
    </select>

    <select id="findModlePin" parameterType="java.util.Map" resultType="hs.Bean.ModlePin">
        select * from modlepins where modlepinsId=#{id} and reference_modleId=#{modleId}
    </select>

    <select id="findModlePins" resultMap="pinResult">
        select * from modlepins where reference_modleId=#{modleId}
    </select>



    <select id="findModleRespon" resultType="hs.Bean.ResponTimeSerise">
        select * from modlerespon where refrencemodleId=#{modleId}
    </select>

    <select id="getBaseConf" resultType="hs.Bean.BaseConf">
        select * from company
    </select>

    <insert id="insertModlePins" parameterType="hs.Bean.ModlePin" useGeneratedKeys="true" keyProperty="modlepinsId">
        insert into modlepins(reference_modleId, modleOpcTag, modlePinName, opcTagName, resource, Q, R,deadZone,funelinitValue,dmvHigh,dmvLow,referTrajectoryCoef)
        values
        <foreach collection="modlePins" item="pin" separator=",">
            (#{pin.reference_modleId}, #{pin.modleOpcTag},  #{pin.modlePinName}, #{pin.opcTagName},
            #{pin.resource}, #{pin.Q}, #{pin.R},#{pin.deadZone},#{pin.funelinitValue},#{pin.dmvHigh},#{pin.dmvLow},#{pin.referTrajectoryCoef})
        </foreach>

    </insert>


    <insert id="insertModle" parameterType="hs.Bean.ControlModle" useGeneratedKeys="true" keyColumn="modleId"
            keyProperty="modleId">
        insert into modle(modleName, controlAPCOutCycle, predicttime_P, timeserise_N, controltime_M, modleEnable) values
        (#{controlModle.modleName},#{controlModle.controlAPCOutCycle},#{controlModle.predicttime_P},#{controlModle.timeserise_N},#{controlModle.controltime_M},0)
    </insert>

    <update id="modifymodle">
        update modle set modleName=#{controlModle.modleName}, controlAPCOutCycle=#{controlModle.controlAPCOutCycle}, predicttime_P=#{controlModle.predicttime_P}, timeserise_N=#{controlModle.timeserise_N}, controltime_M=#{controlModle.controltime_M}
        where modleId=#{modleid}
    </update>

    <update id="modifymodleEnable">
        update modle set modleEnable=#{enable}
        where modleId=#{modleid}
    </update>

    <delete id="deleteModlePins">
        delete from modlepins where reference_modleId=#{modleid}
    </delete>

    <insert id="insertModleResp" useGeneratedKeys="true" keyColumn="modletagId" keyProperty="modletagId">
        insert into modlerespon(refrencemodleId, stepRespJson, inputPins, outputPins) values
        <foreach collection="responTimeSerises" item="resp" separator=",">
            (#{resp.refrencemodleId}, #{resp.stepRespJson}, #{resp.inputPins}, #{resp.outputPins})
        </foreach>
    </insert>

    <delete id="deleteModleResp">
        delete from modlerespon where refrencemodleId=#{modleid}
    </delete>

    <delete id="deleteModle">
        delete from modle where modleId=#{modleid}
    </delete>

    <insert id="insertPinsFODLFilter" parameterType="hs.Filter.FirstOrderLagFilter" useGeneratedKeys="true" keyProperty="pk_filterid">
        insert into filter(filtername, filter_alphe, pk_pinid,backToDCSTag)
        values (#{filter.filtername},#{filter.filter_alphe},#{filter.pk_pinid},#{filter.backToDCSTag})
    </insert>

    <insert id="insertPinsMVAVFilter" parameterType="hs.Filter.MoveAverageFilter" useGeneratedKeys="true" keyProperty="pk_filterid">
        insert into filter(filtername, filter_time, pk_pinid,backToDCSTag)
        values (#{filter.filtername},#{filter.capacity},#{filter.pk_pinid},#{filter.backToDCSTag})
    </insert>

    <select id="findfilterByid" resultMap="filterResult">
        select * from filter where pk_pinid=#{modlepinsId}
    </select>


    <delete id="deletePinsFilter">
        delete from filter where pk_pinid=#{modlepinsId}
    </delete>


</mapper>